// (c) 2019-2020 FMS_Cat - https://github.com/FMS-Cat/experimental-npm/blob/master/LICENSE
function t(t,e){let s=0,i=e.length;for(;s<i;){const n=s+i>>1;e[n]<t?s=n+1:i=n}return s}const e=[-1,-1,1,-1,-1,1,1,1],s=[-1,-1,0,1,-1,0,-1,1,0,1,1,0],i=[0,0,1,0,0,1,0,0,1,0,0,1],n=[0,0,1,0,0,1,1,1];function h(t,e){const s=e||(()=>Math.random());for(let e=0;e<t.length-1;e++){const i=e+Math.floor(s()*(t.length-e)),n=t[i];t[i]=t[e],t[e]=n}return t}function r(t){const e=[];for(let s=0;s<t.length/3;s++){const i=3*s;e.push(t[i],t[i+1],t[i+1],t[i+2],t[i+2],t[i])}return e}function _(t,e){const s=[];for(let i=0;i<e;i++)for(let e=0;e<t;e++)s.push(e,i);return s}class a{constructor(){this.factor=100,this.ratio=1,this.velocity=0,this.value=0,this.target=0}update(t){return this.velocity+=(-this.factor*(this.value-this.target)-2*this.velocity*Math.sqrt(this.factor)*this.ratio)*t,this.value+=this.velocity*t,this.value}}class c{constructor(){this.__time=0,this.__deltaTime=0,this.__isPlaying=!1}get time(){return this.__time}get deltaTime(){return this.__deltaTime}get isPlaying(){return this.__isPlaying}update(t){const e=this.__time;this.__time=t||0,this.__deltaTime=this.__time-e}play(){this.__isPlaying=!0}pause(){this.__isPlaying=!1}setTime(t){this.__time=t}}class o extends c{constructor(t=60){super(),this.__frame=0,this.__fps=t}get frame(){return this.__frame}get fps(){return this.__fps}update(){this.__isPlaying?(this.__time=this.__frame/this.__fps,this.__deltaTime=1/this.__fps,this.__frame++):this.__deltaTime=0}setTime(t){this.__frame=Math.floor(this.__fps*t),this.__time=this.__frame/this.__fps}}class l extends c{constructor(){super(...arguments),this.__rtTime=0,this.__rtDate=performance.now()}get isRealtime(){return!0}update(){const t=performance.now();if(this.__isPlaying){const e=this.__time,s=t-this.__rtDate;this.__time=this.__rtTime+s/1e3,this.__deltaTime=this.time-e}else this.__rtTime=this.time,this.__rtDate=t,this.__deltaTime=0}setTime(t){this.__time=t,this.__rtTime=this.time,this.__rtDate=performance.now()}}function u(t,e,s){return t+(e-t)*s}function m(t,e,s){return Math.min(Math.max(t,e),s)}function d(t){return m(t,0,1)}function x(t,e,s){return d((s-t)/(e-t))}function p(t,e,s){const i=x(t,e,s);return i*i*(3-2*i)}function w(t,e,s){const i=x(t,e,s);return i*i*i*(i*(6*i-15)+10)}function y(t,e,s){const i=x(t,e,s);return i*i*i*i*(i*(i*(-20*i+70)-84)+35)}class g{constructor(){this.factor=10,this.target=0,this.value=0}update(t){return this.value=u(this.target,this.value,Math.exp(-this.factor*t)),this.value}}class f{constructor(t=f.WordsDefault,e=1,s=100){this.__words=t,this.__index=e,this.__end=s}[Symbol.iterator](){return this}next(){if(this.__end<this.__index)return{done:!0,value:null};let t="";for(const[e,s]of this.__words)this.__index%e==0&&(t+=s);return""===t&&(t=this.__index),this.__index++,{done:!1,value:t}}}f.WordsDefault=new Map([[3,"Fizz"],[5,"Buzz"]]);class z{}z.gif="https://fms-cat.com/images/fms_cat.gif",z.png="https://fms-cat.com/images/fms_cat.png";class M{constructor(t){this.__recalcForEach=0,this.__countUntilRecalc=0,this.__history=[],this.__index=0,this.__count=0,this.__cache=0,this.__length=t,this.__recalcForEach=t;for(let e=0;e<t;e++)this.__history[e]=0}get mean(){const t=Math.min(this.__count,this.__length);return 0===t?0:this.__cache/t}get recalcForEach(){return this.__recalcForEach}set recalcForEach(t){const e=t-this.__recalcForEach;this.__recalcForEach=t,this.__countUntilRecalc=Math.max(0,this.__countUntilRecalc+e)}reset(){this.__index=0,this.__count=0,this.__cache=0,this.__countUntilRecalc=0;for(let t=0;t<this.__length;t++)this.__history[t]=0}push(t){const e=this.__history[this.__index];this.__history[this.__index]=t,this.__count++,this.__index=(this.__index+1)%this.__length,0===this.__countUntilRecalc?this.recalc():(this.__countUntilRecalc--,this.__cache-=e,this.__cache+=t)}recalc(){this.__countUntilRecalc=this.__recalcForEach;const t=this.__history.slice(0,Math.min(this.__count,this.__length)).reduce((t,e)=>t+e,0);this.__cache=t}}class ${constructor(t){this.__history=[],this.__sorted=[],this.__index=0,this.__length=t}get median(){const t=Math.min(this.__sorted.length,this.__length);return this.__sorted[Math.floor((t-1)/2)]}reset(){this.__index=0,this.__history=[],this.__sorted=[]}push(e){const s=this.__history[this.__index];if(this.__history[this.__index]=e,this.__index=(this.__index+1)%this.__length,this.__sorted.length===this.__length){const e=t(s,this.__sorted);this.__sorted.splice(e,1)}const i=t(e,this.__sorted);this.__sorted.splice(i,0,e)}}class T{get length(){return Math.sqrt(this.elements.reduce((t,e)=>t+e*e,0))}get normalized(){return this.scale(1/this.length)}clone(){return this.__new(this.elements.concat())}add(t){return this.__new(this.elements.map((e,s)=>e+t.elements[s]))}sub(t){return this.__new(this.elements.map((e,s)=>e-t.elements[s]))}multiply(t){return this.__new(this.elements.map((e,s)=>e*t.elements[s]))}divide(t){return this.__new(this.elements.map((e,s)=>e/t.elements[s]))}scale(t){return this.__new(this.elements.map(e=>e*t))}dot(t){return this.elements.reduce((e,s,i)=>e+s*t.elements[i],0)}}class F extends T{constructor(t=[0,0,0]){super(),this.elements=t}get x(){return this.elements[0]}set x(t){this.elements[0]=t}get y(){return this.elements[1]}set y(t){this.elements[1]=t}get z(){return this.elements[2]}set z(t){this.elements[2]=t}toString(){return`Vector3( ${this.x.toFixed(3)}, ${this.y.toFixed(3)}, ${this.z.toFixed(3)} )`}cross(t){return new F([this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x])}applyQuaternion(t){const e=new b([this.x,this.y,this.z,0]),s=t.inversed,i=t.multiply(e).multiply(s);return new F([i.x,i.y,i.z])}applyMatrix4(t){const e=t.elements,s=1/(e[3]*this.x+e[7]*this.y+e[11]*this.z+e[15]);return new F([(e[0]*this.x+e[4]*this.y+e[8]*this.z+e[12])*s,(e[1]*this.x+e[5]*this.y+e[9]*this.z+e[13])*s,(e[2]*this.x+e[6]*this.y+e[10]*this.z+e[14])*s])}__new(t){return new F(t)}static get zero(){return new F([0,0,0])}static get one(){return new F([1,1,1])}}const v=[0,0,0,1];class b{constructor(t=v){this.elements=t}get x(){return this.elements[0]}get y(){return this.elements[1]}get z(){return this.elements[2]}get w(){return this.elements[3]}toString(){return`Quaternion( ${this.x.toFixed(3)}, ${this.y.toFixed(3)}, ${this.z.toFixed(3)}, ${this.w.toFixed(3)} )`}clone(){return new b(this.elements.concat())}get matrix(){const t=new F([1,0,0]).applyQuaternion(this),e=new F([0,1,0]).applyQuaternion(this),s=new F([0,0,1]).applyQuaternion(this);return new E([t.x,e.x,s.x,0,t.y,e.y,s.y,0,t.z,e.z,s.z,0,0,0,0,1])}get inversed(){return new b([-this.x,-this.y,-this.z,this.w])}multiply(t){return new b([this.w*t.x+this.x*t.w+this.y*t.z-this.z*t.y,this.w*t.y-this.x*t.z+this.y*t.w+this.z*t.x,this.w*t.z+this.x*t.y-this.y*t.x+this.z*t.w,this.w*t.w-this.x*t.x-this.y*t.y-this.z*t.z])}static get identity(){return new b(v)}static fromAxisAngle(t,e){const s=e/2,i=Math.sin(s);return new b([t.x*i,t.y*i,t.z*i,Math.cos(s)])}static fromMatrix(t){const e=t.elements,s=e[0],i=e[4],n=e[8],h=e[1],r=e[5],_=e[9],a=e[2],c=e[6],o=e[10],l=s+r+o;if(l>0){const t=.5/Math.sqrt(l+1);return new b([(c-_)*t,(n-a)*t,(h-i)*t,.25/t])}if(s>r&&s>o){const t=2*Math.sqrt(1+s-r-o);return new b([.25*t,(i+h)/t,(n+a)/t,(c-_)/t])}if(r>o){const t=2*Math.sqrt(1+r-s-o);return new b([(i+h)/t,.25*t,(_+c)/t,(n-a)/t])}{const t=2*Math.sqrt(1+o-s-r);return new b([(n+a)/t,(_+c)/t,.25*t,(h-i)/t])}}}const D=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];class E{constructor(t=D){this.elements=t}get transpose(){const t=this.elements;return new E([t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15]])}get determinant(){const t=this.elements,e=t[0],s=t[1],i=t[2],n=t[3],h=t[4],r=t[5],_=t[6],a=t[7],c=t[8],o=t[9],l=t[10],u=t[11],m=t[12],d=t[13],x=t[14],p=t[15];return(e*r-s*h)*(l*p-u*x)-(e*_-i*h)*(o*p-u*d)+(e*a-n*h)*(o*x-l*d)+(s*_-i*r)*(c*p-u*m)-(s*a-n*r)*(c*x-l*m)+(i*a-n*_)*(c*d-o*m)}get inverse(){const t=this.elements,e=t[0],s=t[1],i=t[2],n=t[3],h=t[4],r=t[5],_=t[6],a=t[7],c=t[8],o=t[9],l=t[10],u=t[11],m=t[12],d=t[13],x=t[14],p=t[15],w=e*r-s*h,y=e*_-i*h,g=e*a-n*h,f=s*_-i*r,z=s*a-n*r,M=i*a-n*_,$=c*d-o*m,T=c*x-l*m,F=c*p-u*m,v=o*x-l*d,b=o*p-u*d,D=l*p-u*x,P=w*D-y*b+g*v+f*F-z*T+M*$;if(0===P)return null;const R=1/P;return new E([r*D-_*b+a*v,i*b-s*D-n*v,d*M-x*z+p*f,l*z-o*M-u*f,_*F-h*D-a*T,e*D-i*F+n*T,x*g-m*M-p*y,c*M-l*g+u*y,h*b-r*F+a*$,s*F-e*b-n*$,m*z-d*g+p*w,o*g-c*z-u*w,r*T-h*v-_*$,e*v-s*T+i*$,d*y-m*f-x*w,c*f-o*y+l*w].map(t=>t*R))}toString(){const t=this.elements.map(t=>t.toFixed(3));return`Matrix4( ${t[0]}, ${t[4]}, ${t[8]}, ${t[12]}; ${t[1]}, ${t[5]}, ${t[9]}, ${t[13]}; ${t[2]}, ${t[6]}, ${t[10]}, ${t[14]}; ${t[3]}, ${t[7]}, ${t[11]}, ${t[15]} )`}clone(){return new E(this.elements.concat())}multiply(...t){if(0===t.length)return this.clone();const e=t.concat();let s=e.shift();0<e.length&&(s=s.multiply(...e));const i=this.elements,n=s.elements;return new E([i[0]*n[0]+i[4]*n[1]+i[8]*n[2]+i[12]*n[3],i[1]*n[0]+i[5]*n[1]+i[9]*n[2]+i[13]*n[3],i[2]*n[0]+i[6]*n[1]+i[10]*n[2]+i[14]*n[3],i[3]*n[0]+i[7]*n[1]+i[11]*n[2]+i[15]*n[3],i[0]*n[4]+i[4]*n[5]+i[8]*n[6]+i[12]*n[7],i[1]*n[4]+i[5]*n[5]+i[9]*n[6]+i[13]*n[7],i[2]*n[4]+i[6]*n[5]+i[10]*n[6]+i[14]*n[7],i[3]*n[4]+i[7]*n[5]+i[11]*n[6]+i[15]*n[7],i[0]*n[8]+i[4]*n[9]+i[8]*n[10]+i[12]*n[11],i[1]*n[8]+i[5]*n[9]+i[9]*n[10]+i[13]*n[11],i[2]*n[8]+i[6]*n[9]+i[10]*n[10]+i[14]*n[11],i[3]*n[8]+i[7]*n[9]+i[11]*n[10]+i[15]*n[11],i[0]*n[12]+i[4]*n[13]+i[8]*n[14]+i[12]*n[15],i[1]*n[12]+i[5]*n[13]+i[9]*n[14]+i[13]*n[15],i[2]*n[12]+i[6]*n[13]+i[10]*n[14]+i[14]*n[15],i[3]*n[12]+i[7]*n[13]+i[11]*n[14]+i[15]*n[15]])}scaleScalar(t){return new E(this.elements.map(e=>e*t))}static get identity(){return new E(D)}static multiply(...t){if(0===t.length)return E.identity;{const e=t.concat();return e.shift().multiply(...e)}}static translate(t){return new E([1,0,0,0,0,1,0,0,0,0,1,0,t.x,t.y,t.z,1])}static scale(t){return new E([t.x,0,0,0,0,t.y,0,0,0,0,t.z,0,0,0,0,1])}static scaleScalar(t){return new E([t,0,0,0,0,t,0,0,0,0,t,0,0,0,0,1])}static rotateX(t){return new E([1,0,0,0,0,Math.cos(t),-Math.sin(t),0,0,Math.sin(t),Math.cos(t),0,0,0,0,1])}static rotateY(t){return new E([Math.cos(t),0,Math.sin(t),0,0,1,0,0,-Math.sin(t),0,Math.cos(t),0,0,0,0,1])}static rotateZ(t){return new E([Math.cos(t),-Math.sin(t),0,0,Math.sin(t),Math.cos(t),0,0,0,0,1,0,0,0,0,1])}static lookAt(t,e=new F([0,0,0]),s=new F([0,1,0]),i=0){const n=t.sub(e).normalized;let h=s.cross(n).normalized,r=n.cross(h);return h=h.scale(Math.cos(i)).add(r.scale(Math.sin(i))),r=n.cross(h),new E([h.x,h.y,h.z,0,r.x,r.y,r.z,0,n.x,n.y,n.z,0,t.x,t.y,t.z,1])}static perspective(t=45,e=.01,s=100){const i=1/Math.tan(t*Math.PI/360),n=s-e;return new E([i,0,0,0,0,i,0,0,0,0,-(s+e)/n,-1,0,0,-2*s*e/n,0])}decompose(){const t=this.elements;let e=new F([t[0],t[1],t[2]]).length;const s=new F([t[4],t[5],t[6]]).length,i=new F([t[8],t[9],t[10]]).length;this.determinant<0&&(e=-e);const n=1/e,h=1/s,r=1/i,_=this.clone();return _.elements[0]*=n,_.elements[1]*=n,_.elements[2]*=n,_.elements[4]*=h,_.elements[5]*=h,_.elements[6]*=h,_.elements[8]*=r,_.elements[9]*=r,_.elements[10]*=r,{position:new F([t[12],t[13],t[14]]),scale:new F([e,s,i]),rotation:b.fromMatrix(_)}}static compose(t,e,s){const i=e.x,n=e.y,h=e.z,r=e.w,_=i+i,a=n+n,c=h+h,o=i*_,l=i*a,u=i*c,m=n*a,d=n*c,x=h*c,p=r*_,w=r*a,y=r*c,g=s.x,f=s.y,z=s.z;return new E([(1-(m+x))*g,(l+y)*g,(u-w)*g,0,(l-y)*f,(1-(o+x))*f,(d+p)*f,0,(u+w)*z,(d-p)*z,(1-(o+m))*z,0,t.x,t.y,t.z,1])}}class P extends T{constructor(t=[0,0,0,0]){super(),this.elements=t}get x(){return this.elements[0]}set x(t){this.elements[0]=t}get y(){return this.elements[1]}set y(t){this.elements[1]=t}get z(){return this.elements[2]}set z(t){this.elements[2]=t}get w(){return this.elements[3]}set w(t){this.elements[3]=t}toString(){return`Vector4( ${this.x.toFixed(3)}, ${this.y.toFixed(3)}, ${this.z.toFixed(3)}, ${this.w.toFixed(3)} )`}applyMatrix4(t){const e=t.elements;return new P([e[0]*this.x+e[4]*this.y+e[8]*this.z+e[12]*this.w,e[1]*this.x+e[5]*this.y+e[9]*this.z+e[13]*this.w,e[2]*this.x+e[6]*this.y+e[10]*this.z+e[14]*this.w,e[3]*this.x+e[7]*this.y+e[11]*this.z+e[15]*this.w])}__new(t){return new P(t)}static get zero(){return new P([0,0,0,0])}static get one(){return new P([1,1,1,1])}}class R{constructor(t,e){this.i=t,this.o=e}swap(){const t=this.i;this.i=this.o,this.o=t}}class S{constructor(){this.__bpm=0,this.__lastTap=0,this.__lastBeat=0,this.__lastTime=0,this.__calc=new M(16)}get beatDuration(){return 60/this.__bpm}get bpm(){return this.__bpm}set bpm(t){this.__lastBeat=this.beat,this.__lastTime=performance.now(),this.__bpm=t}get beat(){return this.__lastBeat+.001*(performance.now()-this.__lastTime)/this.beatDuration}reset(){this.__calc.reset()}nudge(t){this.__lastBeat=this.beat+t,this.__lastTime=performance.now()}tap(){const t=performance.now(),e=.001*(t-this.__lastTap);2<e?this.reset():(this.__calc.push(e),this.__bpm=60/this.__calc.mean),this.__lastTap=t,this.__lastTime=t,this.__lastBeat=0}}class U{constructor(t){this.seed=t||1}gen(t){return t&&(this.seed=t),this.seed=this.seed^this.seed<<13,this.seed=this.seed^this.seed>>>17,this.seed=this.seed^this.seed<<5,this.seed/Math.pow(2,32)+.5}set(t){this.seed=t||this.seed||1}}export{a as CDS,c as Clock,o as ClockFrame,l as ClockRealtime,g as ExpSmooth,z as FMS_Cat,f as FizzBuzz,M as HistoryMeanCalculator,$ as HistoryMedianCalculator,E as Matrix4,b as Quaternion,R as Swap,e as TRIANGLE_STRIP_QUAD,s as TRIANGLE_STRIP_QUAD_3D,i as TRIANGLE_STRIP_QUAD_NORMAL,n as TRIANGLE_STRIP_QUAD_UV,S as TapTempo,T as Vector,F as Vector3,P as Vector4,U as Xorshift,t as binarySearch,m as clamp,u as lerp,x as linearstep,_ as matrix2d,D as rawIdentityMatrix4,v as rawIdentityQuaternion,d as saturate,h as shuffleArray,w as smootherstep,y as smootheststep,p as smoothstep,r as triIndexToLineIndex};
